created: 20161004040001001
tags: Ionic [[Material Design]] Desenvolvimento 2016
title: Material Design no Ionic 2, na for√ßa¬†bruta
type: text/vnd.tiddlywiki

!!! //Como definir o Material Design como padr√£o, mesmo no iOS, modificando Config do seu @App//

[img[https://static.joseli.to/joseli.to/articles/1_bk6rY40xsdgKk4tsT5wAUA.png]]

O Ionic 2 √© lindo. S√©rio. Principalmente nos seus componentes feitos usando os princ√≠pios do Material Design. Diferente do Ionic 1.x, onde ter√≠amos que utilizar alguma biblioteca como o Ionic Material, tudo j√° vem prontinho de f√°brica pra a gente aproveitar.

Claro que os temas para iOS e Windows tamb√©m est√£o l√°, nada mudou. Mas se voc√™ est√° fazendo toda sua identidade visual baseada no Material, provavelmente voc√™ ir√° querer manter essa consist√™ncia entre plataformas.

Fazer isso no Ionic 2 √© bem simples, utilizando o //Config// do m√≥dulo //ionicBootstrap,// que est√° no pacote //ionic-angular//:

<<code """js
import { ionicBootstrap } from ‚Äòionic-angular‚Äô;
""">>

O //ionicBootstrap// √© equivalende ao Bootstrap do Angular 2, que ‚Äúavisa‚Äù qual componente ser√° o root da nossa aplica√ß√£o. Ele j√° est√° devidamente importado e chamado no *''app/app.ts'' do seu aplicativo.

V√° para a √∫ltima linha, e l√° estar√° ele:

<<code """js
ionicBootstrap(BitBar);
""">>

O //ionicBootstrap// recebe (at√©) tr√™s par√¢metros, o componente Root, os Custom Providers e o objeto Config. √â deste √∫ltimo que iremos tratar no dia de hoje.

!! Config

O Config nada mais √© do que um simples objeto onde definimos determinadas propriedades. A primeira coisa √© adiciona-lo ao Bootstrap:

<<code """js
ionicBootstrap(BitBar, [], {

});

// O Config √© o terceiro par√¢metro, ent√£o estamos passando um array vazio no par√¢metro do Custom Providers. Trataremos dele em outro post.
""">>

Para implementarmos a ideia original do post, basta definirmos o //mode// como //‚Äúmd‚Äù://

<<code """js
ionicBootstrap(BitBar, [], {
    mode: 'md'
});
""">>

Prontinho! Estamos avisando ao Ionic que queremos que o modo ''sempre seja'' o Material, independente da plataforma real do dispositivo utilizado.

Esse √© s√≥ um exemplo do que o Config √© capaz. Podemos por exemplo, for√ßar com que as abas apare√ßam sempre no topo, √© s√≥ fazer isso aqui:

<<code """js
ionicBootstrap(BitBar, [], {
  mode: 'md',
  tabsPlacement: 'top'
});

// üîù kkkkkkkkkkk üòÇüëå
""">>

Quer usar o Material, mas acha os √çcones do iOS mais bonitinhos?

<<code """js
ionicBootstrap(BitBar, [], {
  mode: 'md',
  iconMode: 'ios'
});

// Aten√ß√£o, n√£o √© porque voc√™ pode que voc√™ deve.
""">>

[[Na documenta√ß√£o oficial do Ionic 2 existem in√∫meros exemplos|https://ionicframework.com/docs/v3/api/config/Config/]] de como podemos utilizar o Config para manipularmos nosso App. Mas lembrem sempre, crian√ßas, com grandes poderes vem grandes responsabilidades.